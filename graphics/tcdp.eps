%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 764.000000 506.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 764 506
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 764 506
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /L put
dup 34 /N put
dup 35 /e put
dup 36 /t put
dup 37 /space put
dup 38 /R put
dup 39 /o put
dup 40 /u put
dup 41 /r put
dup 42 /d put
dup 43 /D put
dup 44 /a put
dup 45 /W put
dup 46 /p put
dup 47 /S put
dup 48 /v put
dup 49 /C put
dup 50 /m put
dup 51 /s put
dup 52 /c put
dup 53 /l put
dup 54 /i put
dup 55 /n put
dup 56 /k put
dup 57 /g put
dup 58 /w put
dup 59 /f put
dup 60 /X put
dup 61 /F put
dup 62 /V put
dup 63 /M put
dup 64 /two put
dup 65 /b put
dup 66 /U put
dup 67 /K put
dup 68 /A put
dup 69 /H put
dup 70 /I put
dup 71 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<









00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/two 2 def
/A 3 def
/C 4 def
/D 5 def
/F 6 def
/H 7 def
/I 8 def
/K 9 def
/L 10 def
/M 11 def
/N 12 def
/R 13 def
/S 14 def
/U 15 def
/V 16 def
/W 17 def
/X 18 def
/a 19 def
/b 20 def
/c 21 def
/d 22 def
/e 23 def
/f 24 def
/g 25 def
/i 26 def
/k 27 def
/l 28 def
/m 29 def
/n 30 def
/o 31 def
/p 32 def
/r 33 def
/s 34 def
/t 35 def
/u 36 def
/v 37 def
/w 38 def
/fi 39 def
/uni2B91 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C94DE5E409528374E9E7E673E1353F43ED87BF92F553B34192352D69445B049DF4AB09101D67806CE36628C53D0EAC58B4F9F1D4A36AB015D6D9F65DB18C339D44154B041802ACBB99D9C9C286B306A1FDACD6694D079614C735BF437010413C1A2590F134EFC0C487F73CA85375F064734F889749405E35D0DF0F6559BF9329B2E56B5EA57452D258E3B55D8C84E3631EA2C07427A91BE0964FD336E9649369F824C39FFCD327F197D53C03903BA2A70AA63A65F70E3681ECA224B3D92F3E2587B8BC1AEE331E82DCC01BA5B161088CCD1ED1997AE05CE9F2CB40EB3BD9E4E741CF9E56DA1E8BCA9C836AD586071E55A3488AA888CC93D38C0261F36610846AD33C0F2140202DEFA68EC14FE5DE68B73E9005C6CB365990D30C37600F1356D3F62641CA6E66E23AED015B27A2B0ED2F90F1F402919D3879ED2AC12650FD07C14905B06B105FC2EAEA1BBA0DDFBCDB15681DA4289C8AAAE5D40E522E104F5FBD87C3C7BFF3DB6C126C182B7ECF5B27499DF26ED4CA4256EC5322000699948223FFDFC37D978C07CDE4647B917520D50C1B26D368DBD352C13E0A74191B1E74C9DA07DD862CE66F8349A9DE609E0119C74B0D90D8D8466AA0F1BE7C85952341A265E752D434EF3383C638050CE6E26F6BADC2DF0B1DC06894A553CB63FCBD592B2527CDFB783A42D17CB46CE5B8A94A9F4CD5DAD7D24603D7413022354E4B484C5383FE67D5E2FD9DFF5AE317B2270D756C1E25639DF5B279D8A2A7A12E3B5F0D05B
92D66D851657B6D6A498B8D6951AA236B1B15BC1FF23955E6B5FBE7692C6AA0A4872753D0703B245639E8541EA94E0EB19A1F721089142273D1DB860AD8CD24C712626F2F2CD555E11300A62525076DCBEAC5F5A7E3370E502D9FD04F0005DBADA2677B1284FA740ECC33D6DD1AC20F70D1F8B58094A42C56678DDC6A04721D713DC74EB91B15891528123B1950FAB266E31E2038A0F93A38CF53A71AAAA10F454D67BB5C031F615BC42EA7CBF299B74E77DC785B591AD111A6F6BE587DA9670A261E6AE8E9CD37EEC534876DCF92B0002564EE1045B9F4D1245E2008CD9C799AAC753AF5D933CE00527D35F4D3AF30209DAE7B807846482FFFF1B4BD1F77FCE23419E1E00BED052AD1C0D6E38A2196C3650193ABFEFC13B7995A92C76C38784B16C329BBF50FC6C509F80CC91FC324552C4EE51FEE73AA14299C18F1DA5E9872B92C7ED474EF59B04656ECCC74D25F9BA8944471CEB6EAD9E9B181C68FBCD60B30BE5961FD2FFEBB87EF167C36E6C68D4F70E4BD5AF9DE180F9138E1F117E5ED31A74C1104B67751EB29CB1FFB57384E9491A87AEA378BC1685E251B89F64AA81677000CA481EA0ACBF01A48EEB8E3B219DCCB3632482444625399D7919F40FEA8C778823852E19880F451B82EC7B38B533566C8E76BE60FF84EA4CD5DECCD9F5CA478133C44FF33C292DF85E9484AF8F7BE4950A8A17761748FDAF515DA02A3B7034B1F437F917B899AE5D7F727ADFA205A121AEB6A9346BA5A6DCBC44FB64B6D566525D6DB5B0AEE3EE2DE0DCDAF956BC1A8C65F2A571E3C3AE76F1E61BD5751F061EF1F66DF7051FA510FB8922C47669F625ADC5CAC56E0E2127CA79481C5AC3A6A0A6ACD75D376FFB4845B42AE20F6DE1920F7DF6728F2E964DAFED6B5D9A796AEA2C6F8408D3822B477414D3FA6C29EBCCF6B18BD8A1649020C5DE914FF1B0E68C9044A1F617942286F2B13A49E87FCA94A675488FD1322E501F2B3852B50D269E6EE563676651AD1D330C4E3FC6AB6E4B238D3967372B7ACDD3E8C54895D33E40F5343E3BE8890BD6AB608BFFA523312CBAF33E2B0E56C7346C447B5CD8F3586087311B46D7414A37FF173A61D6055768AD546CBB9A05AC7F6135A120B035868E1717F0691E3872A03005BB6CD72A3762ED48AEB8F15AFCC6A923FECB61C649A55FA27447A263EAB099F06589FC37E347FBCFEF75CFAC929FD05E8129CDB4BA48E98B64FF6EAD6C4B54A6506AC1E7F6B6E887E09268E305385EE167DA02DF56D1FB28CC48A03E79A902C165965526E93AB01A341D20594BE55C975C9F17BBA3D254B37BD20A393CC52E75D93701A9CC442480E1B41FAB4A4BFED1579FB195DAEE296FBA4E0438FF43D2BCA08F6F6D8063C54713248873551BF9CCBB60E2457CA4A45858BF3D163EEDAD3024F008AACFC74A5311F24404C4FDBA9A8679
B3A283B22BD615C6B34908E7CD66FB6CCC783D9542532B75459739B44F68832A611EF2682EA6639FDC68EF41E8D7F91383D63A6A558A9724429119B8462719B13384AD4A0BF879D82D197BB0CBCFACE8769A2EDFF076D969C1E3F8392E3A34D1DAF9CE69015E43A654594E6D40FF735E821DE4394972B5169F6C428333AF58ABC0BC53C1DCEFDD723B055987611CB1DAF36CAB33EF4F7DF1BEA146E2CD9FCA033CF03CD67AE651F56EF6DE0909559D969C83EFFB95F553CAA75A02EE16ED6B2257B7C9AC7838E7535C21C5BAD3ADADA9E5A86667EEE3286ADBB2F096E34C07EBA0A04D50A16D7A9EF9D69883BBCAAC5994EED1D26E495097584AAFE3D836C490D87F8AFBE0F9F5348CEB58840AECEA2FB2E9EB1FE070507FD94A788A916AD9389E0CDEC9D249CD7EC9ED38BB44D51E70B74D3FB2D9EE1E2C0BDABE50B4ADCC1127648D34DB5EE67916F775BA6D2253142895F29943286C0428DF74648AC6F70D7DEFAF8EAE30ECF707F47E3C7DB7C2A838820F9A3FA0D5E9E6A8C2BAFD8628970CFD8B17F23E3CFD5817FFA2F7B3F59AB4727191352A7E10FE60BFA9B09958817DA7FAF72FF3665E6FF87F1FD88C0FCED050275A98C35A76D5D31A8B3BD1B9E39687ADD408A3A0161F7889F59139139791E4EB7A00BCFD06CDE4DAFED0CBAE627A5AB8B89F673264C514F2835D2E0336684457D3500A19A09679A92F4BB8AC76C5C5DD6EAF4F477FEAD3CC5ACE2A0164B06F20E7954CBC764788D79543D03642864E8C0909761C521A95AA29CB89517AFF6489B257BB76A5BBDC708C18F2103C62A84585F855F041F8F976FAFAC95EB80DA28A65F9E10E8229EF898EC60FE77A5183B836466F76C2FB63B022A7E5ED2CCFB26398491273FBC7106A8D870F55F6A7B5021B7D6530BCECF8CBD1415FDD1D26D52AD9596C25D9B8C73E00BA20134B28D0DA707AA50963B884E05489557BA02CE745BE18B0888CAAF2BFC54397ABB33FD7FDCF3D24C104D43F12A2A4D3B81E857BA76FB87A77D3A48D66C7B1542A638127705644B7AB07476276987B4BE8263C04176450397200FB1A11DE5A48DB1CCE8708F33783F1A4C5D47DDC58452ACB9F1661789593AD0C77ACCE76B325A9915056BC743AA7E0927DA8C4A154948E938ACD3E083920B87F3F92641BA04719C4CD673B0BA599947F7886B22B9B3710067276D6F27A9E77F89F4C3E3F9236333B0564473E3442E78D7EA10BC3D57ADFE16F816B00672CE69916AD58ACD3D4ECA27C8067B4FBB24A414998B5D6E1033FF16E9D451F14E5EFE690E0781BE993EED70425B908AB272221F195CC6D37173434FCCC717DAE945CCC5BA2D5A2823A2FA756E5180F66BEECB13E4E6302476AE6B386121993AE7EFED2FB1487790520C45753171DFD64F1F8483757C7C431E7BDF1BB31F3AE482C8EDE7949EAC4E64C817F

35FD843AD708BC265A408840B1C96D4B28F25437D26A5ACC740063C0DF43C12F01D2E29E5377F7907DB7C4FDA310672C4A1375AE56A7D1DCBE7EB5656CA601EEAE986C678DF455DE4DC45FC96644CECBF3DCAFD0886F9F4C8C59BD4DF4342E2CD681D360B9F95DA675EF94B737820EC2847E3AF86EC290708C1DE38A8BE4CC6370D7968E736436D29464BCC0AB3397BA13986FDF1F42610ECCBD56436DB3BDFFB9CA897A6FA048337842A3F569FA300FEBFF3A9DA2D58E0471189C985AB6C6A52219EF6D965453792B523F358D8A94C500CAD5B97965AE35A96D310F71042FE1EFCBB8D8A5B9407E95433E5AFC1C179E7B42B3505EC690781A20AF6F384C695657B0D7B243A59846D7B67A80755E28DFE5329CD4851C803ABA7B04AC1A3DEE345A50DAC80D3A15E4A74045A88A13BE82761AC21F36C368B4B9004D86BD77FA24C14962FD5379D0624DBD753F158DE41B34E3768F8A107CCB8A9E031C7CE48980FC31880ABAD9A4BCCBFC87F59E2D9180BE9A8D1D6A6AF7CC4C5D8AA8B4DB82D539539B01B5F6E45AE9471E1D453B57E1C985A99145967B0219E96665C9790C7CBF7B2461C3A9EFCC8397E04FA0973CF9F06D91CBA00C2A1A0956857B0C8C0F54EB7E6C479E32732234464439DF2E49EA41BE7E90265DAEDC15B2186D85431333874B8C3E66B5F00C185CEF221AC1069C28F4F5DCE3E80645FF4F7382918057E95E27D257A2FCF02BC471B628C0645C9FC65D9499F76805CD1AE73A2E51E58DA0BEB66D2C6FC2DB3108FFE5029F291A65A6036A176C27B8AE78EF2077EADA1B7F29554BF67BB098A4A8BDCDA0CE5EF5CEC759394E24EF4210D02F963E29C2EFC168DC2F12D0CBED8205FD11626F71D0C8CD6BEE7E9DA902E5CF72980373CD96FB60DA7E1CC15878765F1CAAC141DF0A67751D2693DAF9AC7542BBD9DB93E14301CF8C14DA3E00AF1F5AB4516F7D21DA7DA3214A07A24B73628AEA6E50F29845B967F4DF70844387C2DCA0A1C9850BF7EAD5AE344FDEAFF7F16DC3543854494504A34D3E213B615ABF427349EE9936A13B4BE00809A29A48A2822F5D0EC25C197FDA111DC2513744C6C042754561B5F94AC85018950210E734A4BEDBC49DEB36923F592272392BE74FA96B86D99DEA52293CDC27F2ED2BB4170380C2D491D8CC43C2770D41622E7C8201E2C56C4421E5B815780A198E3BD2F49F1DBA2290934EC5F4D73C90CB22756B27B4BDB5CC1D972F02BE566EB1239947E8100B1411E09C050D3151C022A28055653BB98B9F1DF0EBFB6A6A78F0B71F18AF1C6745507E0D7BE5CFFF4A21D1E75887E2DAF7249A1AF0F3DABAB7F8AFD8CF7154627900B73D762FB30CABFCD55433DE972592F93F1DA4983D5CC69DE02F9B6129C5B8F6FF2837BDC00EC0AB7738FFDDE14C7BF8A51D0CB53E8A1C788AA5B2D43429671981AC66
0085A6A01853DECD07F72881BCF0D95968A19C9666CD978551A847148F1ECA5D28CB2943881FFEEA9407CB83EB13B41018478DE493CA2C893B2FE3643CB0A45865E07A7A77011D072B0153C4C83CA62D6E6EFD7C05A14C4C030F0164A559C0C06794A5335ADBA803CCF5D2AC162212122E53CBE1C23AFF6BA5632AE67EF430854CA7CDFB4D3265B27F7F6CDA7DB438A50C9906B43548606EDA14C0AAE7ED83E0BEC73EAE30DED554EC140F4D2245092571F70B460B3DD08FFBC6527DCB16CCD432E9B9F5C02A41013A09A7AD24E2179DBE50FF516220E500573AC7F66B46A32659FBD40368C3C11ECCE55C8618FC89C560D52F6F4B32190BAD94E4CD78BF18405FF3DEB04A9D2077C1138DDE0FEAFC138F7FF4AA2136FD85ADBF6AC8D4E31B19D2FEBD35000640790451E5186E81D28E10AA2C20F5BB8988E530FADCBECF18452E5DB608CC80093EB27A31AFECFD346CAEFA907EA223E6BF5A71C5474D4B1F0F67B019D4B173805609A96FC3C464DD7AF4893F3C54A4CDB6C92D5E51D6F13458396ECBA67D16BBB8C6DE00032C7521CC52C7F9D6E82BAD9F81DD69423C6F20D2D08642BAB79FE4D7EF3D6FD8E74B008C654ECFAFC58F1D7C31C82DF9293F1842C6251034FF887377E11CFC3B62ADF3A0FFB991F28D3229F26AF4899D85D49BF82B101B763BB44BA9B717E546CC64C3312A4C4A49A11F8516DE7EE03BAC375E3A89F0B46373ECB90FCA2DD4B44A5E507926B3627BF7A88304F91BB47AA8272BCE8453AFDDD25D63B3D19D42890E0EAF5A1DAB4D0EA4F808DA70F5375C062E270104D5CFC2E89D85C44DB676C743F70364AE7AD19161FA43715F97B56568C9B997986EA92DBF986E6103E50E0F088EC6B5AA35FC122FC6CD473AEC26DB34D0CB66511E09E6E7664D594153C1AA250F6E8413AE8CBD3FE08033DED9E723530F489B196DF2FCA35471446A375248D7A430E180D6F6CD3786F267F4D5B7CC183A7D5AC2BDE59F481EC30C86C7B348D2D2FAAC5BF926CCB534570988A84A37D60C44DA629B677065E44A3D3A39C2CD6C6BB6CF9675DA2635E22C332688330ADD2B922AED7F651A70A57E43E800944364B9612E398BCF1A50CB040023A8760F4BEDFA984EC2A794051EED1EC11CB33CBB8A884544E0ED5E89D85D8F90E7FBA5843DD272FE46E9F64DA95D0A50828347BACCD440417875EC6C82131C801D3D5510103CBB6B2EC65AAF25531D2156E6669CF262DCB9F95987535CB2C050AFC8C261D0683D069290E9817572FFFB2ECF9686A61DCB09081241A905DDE5D245E68F15FAD88A518B9B06FA134BBE0265AE05C550882A9958FC9DA69D4AB958A7358C3B857828DF524EE7DC889F079C0742320CB26E4329115AC23888E6DFEFD8CFE4D0856AFFB9722B343D8ADAEA5C56B2A82DDA76AD6E6E6F5521F216C440EE419FC4B040FF
52D8A57D11EDA18D3ED0BD4DA8C5D0873832BC6DC272329B086C06FBBABFB7152984A389A0A580ECB87C3417BC015332427F21F359417A89ECBF6B25B19B7FD312D41B08BBA5121D810090EC2A77B492AC5C8303E043D3DD112F42C3D6B7A2A9A2FEEA7533D5386AFE16CBA23F290EFBF2496958716229A4A5EBED0158F9D3C870523EF1C0C61537253E6C3FCBE9C45F4100E866203DF26F3A0030035F27722F0BA74942F0F1C58EAB1528ED95323D6980C8194099BF7F980E060DED54CC99835378F71886C8037EF6F9E773CA534E799D2A77492227CEE72397B4678AB608D866D1E2F77E06B486E39C123078431124AAAAF8752BD8E28B72EF99E484582F6EDA617F12F7C511AD3C6CEE174671948CACFEA600ADE703AFCBB1FFC1D510D21BD772F7FD6DF54319637B3759BC7405F5AB3931499784BCBA0CC7DFB4E9B754D90FB6D43FD9D1E68DCCD2CE5FF03DA0C3972D4A88BC477574FCC968F08DCF21782CD1DC24A1EDF8BF6CECF4A82E61B22FB33C2487C2BBCD9F9409B71737C4BE5CF737C462C4F7CD633320E714BC3BFE1647CB99BEF9B00FC61D6BA1AD75A76D11
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
q
0 0 764 506 rc
529.5 219.5 m
763.5 219.5 l
763.5 66.5 l
529.5 66.5 l
h
528.79999 219.8 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
653.5 61.5 m
887.5 61.5 l
887.5 214.5 l
653.5 214.5 l
h
652.79999 61.200001 m
S
0 i
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
CM
172.5 505.5 m
508.5 505.5 l
508.5 66.5 l
172.5 66.5 l
h
171.8 505.39999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
296.5 -224.5 m
632.5 -224.5 l
632.5 214.5 l
296.5 214.5 l
h
295.79999 -224.39999 m
S
0 i
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
CM
19.5 505.5 m
151.5 505.5 l
151.5 66.5 l
19.5 66.5 l
h
18.799999 505.39999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
143.5 -224.5 m
275.5 -224.5 l
275.5 214.5 l
143.5 214.5 l
h
142.8 -224.39999 m
S
0 i
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
CM
518.5 209.5 m
753.5 209.5 l
753.5 56.5 l
518.5 56.5 l
h
518.59998 209.60001 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
642.5 71.5 m
877.5 71.5 l
877.5 224.5 l
642.5 224.5 l
h
642.59998 71.400002 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 635.90002 133.10001 cm
/F1.1[ 16 0 0 -16 0 0]sf
-64.896004 -56.5 m
(!"#$%&'\($#\)%"'*#)[ 8.896000 11.552000 8.592000 5.040000 4.448000 10.960000 9.184000 8.896000 5.040000 8.592000 5.328000 4.448000 11.552000 9.184000 9.488000 0.000000 ] xS
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
CM
161.5 494.5 m
498.5 494.5 l
498.5 56.5 l
161.5 56.5 l
h
161.60001 495.20001 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
285.5 -213.5 m
622.5 -213.5 l
622.5 224.5 l
285.5 224.5 l
h
285.60001 -214.2 m
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 329.89999 275.89999 cm
-60.888 -199.3 m
(+,$,-,\).%/#\)0#\))[ 11.264000 8.592000 5.040000 8.592000 14.224000 8.592000 5.328000 9.488000 4.448000 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
/Cs1 SC
0.92143101 0.92145264 0.92144102 sc
CM
8.5 494.5 m
141.5 494.5 l
141.5 56.5 l
8.5 56.5 l
h
8.6000004 495.20001 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
132.5 -213.5 m
265.5 -213.5 l
265.5 224.5 l
132.5 224.5 l
h
132.60001 -214.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 74.900002 275.89999 cm
-33.200001 -199.3 m
(1'2.\($#)[ 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 0.000000 ] xS
/Cs1 SC
1 0.52120531 1 sc
CM
29.5 454.5 m
121.5 454.5 l
121.5 423.5 l
29.5 423.5 l
h
29 454.39999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
153.5 -173.5 m
245.5 -173.5 l
245.5 -142.5 l
153.5 -142.5 l
h
153 -173.39999 m
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 74.900002 439.10001 cm
-31.416 5.776001 m
(\(3#\)%,..)[ 8.896000 8.000000 8.592000 5.328000 4.448000 8.592000 9.488000 0.000000 ] xS
/Cs1 SC
0.46202266 0.83828372 1 sc
CM
29.5 392.5 m
121.5 392.5 l
121.5 362.5 l
29.5 362.5 l
h
29 393.20001 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
153.5 -111.5 m
245.5 -111.5 l
245.5 -81.5 l
153.5 -81.5 l
h
153 -112.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 74.900002 377.89999 cm
-34.080002 5.776001 m
(*03%456#7$)[ 9.488000 8.000000 8.000000 4.448000 8.592000 3.552000 3.552000 8.592000 8.896000 0.000000 ] xS
/Cs1 SC
0.45138681 0.99309605 1 sc
CM
29.5 270.5 m
121.5 270.5 l
121.5 239.5 l
29.5 239.5 l
h
29 270.79999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
153.5 10.5 m
245.5 10.5 l
245.5 41.5 l
153.5 41.5 l
h
153 10.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 74.900002 255.5 cm
-25.784 5.776001 m
(*03%6.4)[ 9.488000 8.000000 8.000000 4.448000 3.552000 9.488000 0.000000 ] xS
/Cs1 SC
1 0.57810515 0 sc
CM
29.5 168.5 m
121.5 168.5 l
121.5 137.5 l
29.5 137.5 l
h
29 168.8 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
153.5 112.5 m
245.5 112.5 l
245.5 143.5 l
153.5 143.5 l
h
153 112.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 74.900002 153.5 cm
-17.040001 5.776001 m
(!"#$)[ 8.896000 11.552000 8.592000 0.000000 ] xS
/Cs1 SC
1 0.83234566 0.47320586 sc
CM
29.5 107.5 m
121.5 107.5 l
121.5 76.5 l
29.5 76.5 l
h
29 107.6 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
153.5 173.5 m
245.5 173.5 l
245.5 204.5 l
153.5 204.5 l
h
153 173.39999 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 74.900002 92.300003 cm
-25.936001 5.776001 m
(897657*)[ 8.304000 9.184000 8.896000 3.552000 3.552000 8.896000 0.000000 ] xS
/Cs1 SC
0.46202266 0.83828372 1 sc
CM
182.5 392.5 m
406.5 392.5 l
406.5 362.5 l
182.5 362.5 l
h
182 393.20001 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
306.5 -111.5 m
530.5 -111.5 l
530.5 -81.5 l
306.5 -81.5 l
h
306 -112.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 294.20001 377.89999 cm
-36.888 5.776001 m
(*03%3#\)0#\))[ 9.488000 8.000000 8.000000 4.448000 8.000000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
/Cs1 SC
0.45138681 0.99309605 1 sc
CM
182.5 270.5 m
274.5 270.5 l
274.5 239.5 l
182.5 239.5 l
h
182 270.79999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
306.5 10.5 m
398.5 10.5 l
398.5 41.5 l
306.5 41.5 l
h
306 10.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 227.89999 255.5 cm
-25.784 5.776001 m
(*03%6.4)[ 9.488000 8.000000 8.000000 4.448000 3.552000 9.488000 0.000000 ] xS
/Cs1 SC
1 0.57810515 0 sc
CM
182.5 168.5 m
274.5 168.5 l
274.5 137.5 l
182.5 137.5 l
h
182 168.8 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
306.5 112.5 m
398.5 112.5 l
398.5 143.5 l
306.5 143.5 l
h
306 112.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 227.89999 153.5 cm
-17.040001 5.776001 m
(!"#$)[ 8.896000 11.552000 8.592000 0.000000 ] xS
/Cs1 SC
1 0.83234566 0.47320586 sc
CM
182.5 107.5 m
274.5 107.5 l
274.5 76.5 l
182.5 76.5 l
h
182 107.6 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
306.5 173.5 m
398.5 173.5 l
398.5 204.5 l
306.5 204.5 l
h
306 173.39999 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 227.89999 92.300003 cm
-25.936001 5.776001 m
(897657*)[ 8.304000 9.184000 8.896000 3.552000 3.552000 8.896000 0.000000 ] xS
/Cs1 SC
0.55634254 0.9793455 0 sc
CM
253.5 331.5 m
406.5 331.5 l
406.5 301.5 l
253.5 301.5 l
h
253.39999 332 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
377.5 -50.5 m
530.5 -50.5 l
530.5 -20.5 l
377.5 -20.5 l
h
377.39999 -51 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 329.89999 316.70001 cm
-17.176001 5.776001 m
(*:;3)[ 9.488000 12.128000 4.736000 0.000000 ] xS
/Cs1 SC
0.45009387 0.98132259 0.47430307 sc
CM
386.5 270.5 m
478.5 270.5 l
478.5 239.5 l
386.5 239.5 l
h
386 270.79999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
510.5 10.5 m
602.5 10.5 l
602.5 41.5 l
510.5 41.5 l
h
510 10.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 431.89999 255.5 cm
-15.408 5.776001 m
(*4;3)[ 9.488000 8.592000 4.736000 0.000000 ] xS
/Cs1 SC
0.57045853 0.57047236 0.57046491 sc
CM
386.5 199.5 m
478.5 199.5 l
478.5 168.5 l
386.5 168.5 l
h
386 199.39999 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
510.5 81.5 m
602.5 81.5 l
602.5 112.5 l
510.5 112.5 l
h
510 81.599998 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 431.89999 184.10001 cm
-14.664 5.776001 m
(<=/)[ 9.776000 9.184000 0.000000 ] xS
/Cs1 SC
0.83741802 0.83743781 0.83742714 sc
CM
386.5 137.5 m
478.5 137.5 l
478.5 107.5 l
386.5 107.5 l
h
386 138.2 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
510.5 143.5 m
602.5 143.5 l
602.5 173.5 l
510.5 173.5 l
h
510 142.8 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 431.89999 122.9 cm
-15.568 5.776001 m
(!>?)[ 7.424000 9.776000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
198.89999 -132.89999 m
198.89999 -122.1 l
S
0 i
CM
74.900002 395.10001 m
77.900002 403.10001 l
71.900002 403.10001 l
h
74.900002 395.10001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
198.89999 -114.1 m
201.89999 -122.1 l
195.89999 -122.1 l
h
198.89999 -114.1 m
S
CM
74.900002 421.89999 m
71.900002 413.89999 l
77.900002 413.89999 l
h
74.900002 421.89999 m
f
1 0 0 -1 -124 281 cm
198.89999 -140.89999 m
195.89999 -132.89999 l
201.89999 -132.89999 l
h
198.89999 -140.89999 m
S
1 J
1 j
0.60000002 i
198.89999 -71.699997 m
198.89999 0.30000001 l
S
0 i
CM
74.900002 272.70001 m
77.900002 280.70001 l
71.900002 280.70001 l
h
74.900002 272.70001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
198.89999 8.3000002 m
201.89999 0.30000001 l
195.89999 0.30000001 l
h
198.89999 8.3000002 m
S
CM
74.900002 360.70001 m
71.900002 352.70001 l
77.900002 352.70001 l
h
74.900002 360.70001 m
f
1 0 0 -1 -124 281 cm
198.89999 -79.699997 m
195.89999 -71.699997 l
201.89999 -71.699997 l
h
198.89999 -79.699997 m
S
1 J
1 j
0.60000002 i
198.89999 50.700001 m
198.89999 102.3 l
S
0 i
CM
74.900002 170.7 m
77.900002 178.7 l
71.900002 178.7 l
h
74.900002 170.7 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
198.89999 110.3 m
201.89999 102.3 l
195.89999 102.3 l
h
198.89999 110.3 m
S
CM
74.900002 238.3 m
71.900002 230.3 l
77.900002 230.3 l
h
74.900002 238.3 m
f
1 0 0 -1 -124 281 cm
198.89999 42.700001 m
195.89999 50.700001 l
201.89999 50.700001 l
h
198.89999 42.700001 m
S
1 J
1 j
0.60000002 i
198.89999 152.7 m
198.89999 163.5 l
S
0 i
CM
74.900002 109.5 m
77.900002 117.5 l
71.900002 117.5 l
h
74.900002 109.5 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
198.89999 171.5 m
201.89999 163.5 l
195.89999 163.5 l
h
198.89999 171.5 m
S
CM
74.900002 136.3 m
71.900002 128.3 l
77.900002 128.3 l
h
74.900002 136.3 m
f
1 0 0 -1 -124 281 cm
198.89999 144.7 m
195.89999 152.7 l
201.89999 152.7 l
h
198.89999 144.7 m
S
1 J
1 j
0.60000002 i
351.89999 163.5 m
351.89999 152.7 l
S
0 i
CM
227.89999 136.3 m
224.89999 128.3 l
230.89999 128.3 l
h
227.89999 136.3 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
351.89999 144.7 m
348.89999 152.7 l
354.89999 152.7 l
h
351.89999 144.7 m
S
CM
227.89999 109.5 m
230.89999 117.5 l
224.89999 117.5 l
h
227.89999 109.5 m
f
1 0 0 -1 -124 281 cm
351.89999 171.5 m
354.89999 163.5 l
348.89999 163.5 l
h
351.89999 171.5 m
S
1 J
1 j
0.60000002 i
351.89999 102.3 m
351.89999 50.700001 l
S
0 i
CM
227.89999 238.3 m
224.89999 230.3 l
230.89999 230.3 l
h
227.89999 238.3 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
351.89999 42.700001 m
348.89999 50.700001 l
354.89999 50.700001 l
h
351.89999 42.700001 m
S
CM
227.89999 170.7 m
230.89999 178.7 l
224.89999 178.7 l
h
227.89999 170.7 m
f
1 0 0 -1 -124 281 cm
351.89999 110.3 m
354.89999 102.3 l
348.89999 102.3 l
h
351.89999 110.3 m
S
1 J
1 j
0.60000002 i
555.90002 50.700001 m
555.90002 71.699997 l
S
0 i
CM
431.89999 201.3 m
434.89999 209.3 l
428.89999 209.3 l
h
431.89999 201.3 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
555.90002 79.699997 m
558.90002 71.699997 l
552.90002 71.699997 l
h
555.90002 79.699997 m
S
CM
431.89999 238.3 m
428.89999 230.3 l
434.89999 230.3 l
h
431.89999 238.3 m
f
1 0 0 -1 -124 281 cm
555.90002 42.700001 m
552.90002 50.700001 l
558.90002 50.700001 l
h
555.90002 42.700001 m
S
1 J
1 j
0.60000002 i
555.90002 122.1 m
555.90002 132.89999 l
S
0 i
CM
431.89999 140.10001 m
434.89999 148.10001 l
428.89999 148.10001 l
h
431.89999 140.10001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
555.90002 140.89999 m
558.90002 132.89999 l
552.90002 132.89999 l
h
555.90002 140.89999 m
S
CM
431.89999 166.89999 m
428.89999 158.89999 l
434.89999 158.89999 l
h
431.89999 166.89999 m
f
1 0 0 -1 -124 281 cm
555.90002 114.1 m
552.90002 122.1 l
558.90002 122.1 l
h
555.90002 114.1 m
S
/Cs1 SC
1 0.49327189 0.47399843 sc
CM
253.5 229.5 m
355.5 229.5 l
355.5 199.5 l
253.5 199.5 l
h
253.39999 230 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
377.5 51.5 m
479.5 51.5 l
479.5 81.5 l
377.5 81.5 l
h
377.39999 51 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 304.39999 214.7 cm
-40.896 5.776001 m
(5\(3$\)#%456#7$)[ 3.552000 8.896000 8.000000 5.040000 5.040000 8.592000 4.448000 8.592000 3.552000 3.552000 8.592000 8.896000 0.000000 ] xS
/Cs1 SC
1 0.57810515 0 sc
CM
539.5 168.5 m
733.5 168.5 l
733.5 137.5 l
539.5 137.5 l
h
539 168.8 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
663.5 112.5 m
857.5 112.5 l
857.5 143.5 l
663.5 143.5 l
h
663 112.2 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 635.90002 153.5 cm
-17.040001 5.776001 m
(!"#$)[ 8.896000 11.552000 8.592000 0.000000 ] xS
/Cs1 SC
1 0.83234566 0.47320586 sc
CM
539.5 107.5 m
631.5 107.5 l
631.5 76.5 l
539.5 76.5 l
h
539 107.6 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
663.5 173.5 m
755.5 173.5 l
755.5 204.5 l
663.5 204.5 l
h
663 173.39999 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 584.90002 92.300003 cm
-25.936001 5.776001 m
(897657*)[ 8.304000 9.184000 8.896000 3.552000 3.552000 8.896000 0.000000 ] xS
/Cs1 SC
0.99953407 0.98835558 0.47265524 sc
CM
641.5 107.5 m
733.5 107.5 l
733.5 76.5 l
641.5 76.5 l
h
641 107.6 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
765.5 173.5 m
857.5 173.5 l
857.5 204.5 l
765.5 204.5 l
h
765 173.39999 m
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 686.90002 92.300003 cm
-30.68 5.776001 m
(8'@6A57*)[ 8.304000 9.184000 8.896000 3.552000 9.488000 3.552000 8.896000 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
1 0.149131 0 sc
1 0 0 -1 -124 281 cm
743.20001 244.8 m
151.5 244.8 l
S
0 i
CM
14.7 36.200001 m
27.5 31.4 l
27.5 41 l
h
14.7 36.200001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
138.7 244.8 m
151.5 249.60001 l
151.5 240 l
h
138.7 244.8 m
S
CM
620.6059 32.805889 m
618.73138 34.680405 618.73138 37.719597 620.6059 39.594112 c
622.48041 41.468624 625.51959 41.468624 627.3941 39.594112 c
629.26862 37.719597 629.26862 34.680405 627.3941 32.805889 c
625.51959 30.931376 622.48041 30.931376 620.6059 32.805889 c
f
1 0 0 -1 -124 281 cm
744.6059 248.19411 m
742.73138 246.3196 742.73138 243.28041 744.6059 241.40588 c
746.48041 239.53137 749.51959 239.53137 751.3941 241.40588 c
753.26862 243.28041 753.26862 246.3196 751.3941 248.19411 c
749.51959 250.06862 746.48041 250.06862 744.6059 248.19411 c
S
1 J
1 j
0.60000002 i
0 0.56031799 0 sc
776.59998 244.8 m
848.09998 244.8 l
S
0 i
CM
736.90002 36.200001 m
724.09998 41 l
724.09998 31.4 l
h
736.90002 36.200001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
860.90002 244.8 m
848.09998 240 l
848.09998 249.60001 l
h
860.90002 244.8 m
S
CM
651.19409 39.594112 m
653.0686 37.719597 653.0686 34.680405 651.19409 32.805889 c
649.31958 30.931376 646.2804 30.931376 644.40588 32.805889 c
642.53137 34.680405 642.53137 37.719597 644.40588 39.594112 c
646.2804 41.468624 649.31958 41.468624 651.19409 39.594112 c
f
1 0 0 -1 -124 281 cm
775.19409 241.40588 m
777.0686 243.28041 777.0686 246.3196 775.19409 248.19411 c
773.31958 250.06862 770.2804 250.06862 768.40588 248.19411 c
766.53137 246.3196 766.53137 243.28041 768.40588 241.40588 c
770.2804 239.53137 773.31958 239.53137 775.19409 241.40588 c
S
1 w
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
198.89999 213.89999 m
198.89999 234.89999 l
S
0 i
CM
74.900002 38.099998 m
77.900002 46.099998 l
71.900002 46.099998 l
h
74.900002 38.099998 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
198.89999 242.89999 m
201.89999 234.89999 l
195.89999 234.89999 l
h
198.89999 242.89999 m
S
CM
74.900002 75.099998 m
71.900002 67.099998 l
77.900002 67.099998 l
h
74.900002 75.099998 m
f
1 0 0 -1 -124 281 cm
198.89999 205.89999 m
195.89999 213.89999 l
201.89999 213.89999 l
h
198.89999 205.89999 m
S
1 J
1 j
0.60000002 i
351.89999 213.89999 m
351.89999 234.89999 l
S
0 i
CM
227.89999 38.099998 m
230.89999 46.099998 l
224.89999 46.099998 l
h
227.89999 38.099998 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
351.89999 242.89999 m
354.89999 234.89999 l
348.89999 234.89999 l
h
351.89999 242.89999 m
S
CM
227.89999 75.099998 m
224.89999 67.099998 l
230.89999 67.099998 l
h
227.89999 75.099998 m
f
1 0 0 -1 -124 281 cm
351.89999 205.89999 m
348.89999 213.89999 l
354.89999 213.89999 l
h
351.89999 205.89999 m
S
2 w
1 J
1 j
[
16
10
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
125.6 -126.4 m
880.40002 -126.4 l
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 620.66248 429.20001 cm
-41.776001 5.776001 m
(B3#\)%/.,4#)[ 11.552000 8.000000 8.592000 5.328000 4.448000 10.368000 9.488000 8.592000 8.592000 0.000000 ] xS
1 0 0 -1 626.66248 388.39999 cm
-48 5.776001 m
(C#\)7#5%/.,4#)[ 10.672000 8.592000 5.616000 8.896000 8.592000 3.552000 4.448000 10.368000 9.488000 8.592000 8.592000 0.000000 ] xS
1 0 0 -1 284.49609 15.8 cm
-36.880001 5.776001 m
(D\)6#3%E/")[ 10.368000 5.328000 3.552000 8.592000 8.000000 4.448000 11.552000 10.368000 0.000000 ] xS
1 0 0 -1 686.71405 15.8 cm
-35.119999 5.776001 m
(F7G76A,7*)[ 4.144000 8.896000 8.288000 8.896000 3.552000 9.488000 8.592000 8.896000 0.000000 ] xS
/Cs1 SC
0.99999601 1 1 sc
CM
304.5 120.86 m
304.5 145.34 l
304.5 147.02911 311.25439 148.39999 319.70001 148.39999 c
328.1456 148.39999 335.5 147.02911 335.5 145.34 c
335.5 120.86 l
335.5 119.17088 328.1456 117.8 319.70001 117.8 c
311.25439 117.8 304.5 119.17088 304.5 120.86 c
f
1 w
[] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
428.5 160.14 m
428.5 135.66 l
428.5 133.97089 435.25439 132.60001 443.70001 132.60001 c
452.1456 132.60001 459.5 133.97089 459.5 135.66 c
459.5 160.14 l
459.5 161.82912 452.1456 163.2 443.70001 163.2 c
435.25439 163.2 428.39999 161.82912 428.39999 160.14 c
428.39999 135.66 m
428.39999 137.34912 435.25439 138.72 443.70001 138.72 c
452.1456 138.72 459 137.34912 459 135.66 c
S
0 i
/Cs1 SC
0.99999601 1 1 sc
CM
284.5 110.66 m
284.5 135.14 l
284.5 136.82912 290.8544 138.2 299.29999 138.2 c
307.74561 138.2 314.5 136.82912 314.5 135.14 c
314.5 110.66 l
314.5 108.97088 307.74561 107.6 299.29999 107.6 c
290.8544 107.6 284.5 108.97088 284.5 110.66 c
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
408.5 170.34 m
408.5 145.86 l
408.5 144.17088 414.8544 142.8 423.29999 142.8 c
431.74561 142.8 438.5 144.17088 438.5 145.86 c
438.5 170.34 l
438.5 172.02911 431.74561 173.39999 423.29999 173.39999 c
414.8544 173.39999 408 172.02911 408 170.34 c
408 145.86 m
408 147.54912 414.8544 148.92 423.29999 148.92 c
431.74561 148.92 438.60001 147.54912 438.60001 145.86 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 299.29999 122.9 cm
/F1.1[ 10 0 0 -10 0 0]sf
-10 5.3900008 m
(//+)[ 6.480000 6.480000 0.000000 ] xS
/Cs1 SC
0.99999601 1 1 sc
CM
325.5 110.66 m
325.5 135.14 l
325.5 136.82912 331.65439 138.2 340.10001 138.2 c
348.54559 138.2 355.5 136.82912 355.5 135.14 c
355.5 110.66 l
355.5 108.97088 348.54559 107.6 340.10001 107.6 c
331.65439 107.6 325.5 108.97088 325.5 110.66 c
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
449.5 170.34 m
449.5 145.86 l
449.5 144.17088 455.65439 142.8 464.10001 142.8 c
472.54559 142.8 479.5 144.17088 479.5 145.86 c
479.5 170.34 l
479.5 172.02911 472.54559 173.39999 464.10001 173.39999 c
455.65439 173.39999 448.79999 172.02911 448.79999 170.34 c
448.79999 145.86 m
448.79999 147.54912 455.65439 148.92 464.10001 148.92 c
472.54559 148.92 479.39999 147.54912 479.39999 145.86 c
S
/Cs3 SC
0 sc
0 i
1 0 0 -1 340.10001 122.9 cm
-10 5.3900008 m
(//+)[ 6.480000 6.480000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -124 281 cm
500.10001 158.10001 m
489.29999 158.10001 l
S
0 i
CM
357.29999 122.9 m
365.29999 119.9 l
365.29999 125.9 l
h
357.29999 122.9 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
481.29999 158.10001 m
489.29999 161.10001 l
489.29999 155.10001 l
h
481.29999 158.10001 m
S
CM
384.10001 122.9 m
376.10001 125.9 l
376.10001 119.9 l
h
384.10001 122.9 m
f
1 0 0 -1 -124 281 cm
508.10001 158.10001 m
500.10001 155.10001 l
500.10001 161.10001 l
h
508.10001 158.10001 m
S
1 J
1 j
0.60000002 i
346.79999 0.30000001 m
346.79999 -71.699997 l
S
0 i
CM
222.8 360.70001 m
219.8 352.70001 l
225.8 352.70001 l
h
222.8 360.70001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
346.79999 -79.699997 m
343.79999 -71.699997 l
349.79999 -71.699997 l
h
346.79999 -79.699997 m
S
CM
222.8 272.70001 m
225.8 280.70001 l
219.8 280.70001 l
h
222.8 272.70001 m
f
1 0 0 -1 -124 281 cm
346.79999 8.3000002 m
349.79999 0.30000001 l
343.79999 0.30000001 l
h
346.79999 8.3000002 m
S
1 J
1 j
0.60000002 i
448.79999 -60.900002 m
448.79999 -71.699997 l
S
0 i
CM
324.79999 360.70001 m
321.79999 352.70001 l
327.79999 352.70001 l
h
324.79999 360.70001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
448.79999 -79.699997 m
445.79999 -71.699997 l
451.79999 -71.699997 l
h
448.79999 -79.699997 m
S
CM
324.79999 333.89999 m
327.79999 341.89999 l
321.79999 341.89999 l
h
324.79999 333.89999 m
f
1 0 0 -1 -124 281 cm
448.79999 -52.900002 m
451.79999 -60.900002 l
445.79999 -60.900002 l
h
448.79999 -52.900002 m
S
1 J
1 j
0.60000002 i
438.60001 -10.5 m
438.60001 41.099998 l
S
0 i
CM
314.60001 231.89999 m
317.60001 239.89999 l
311.60001 239.89999 l
h
314.60001 231.89999 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
438.60001 49.099998 m
441.60001 41.099998 l
435.60001 41.099998 l
h
438.60001 49.099998 m
S
CM
314.60001 299.5 m
311.60001 291.5 l
317.60001 291.5 l
h
314.60001 299.5 m
f
1 0 0 -1 -124 281 cm
438.60001 -18.5 m
435.60001 -10.5 l
441.60001 -10.5 l
h
438.60001 -18.5 m
S
1 J
1 j
0.60000002 i
387.60001 -10.5 m
387.60001 0.30000001 l
S
0 i
CM
263.60001 272.70001 m
266.60001 280.70001 l
260.60001 280.70001 l
h
263.60001 272.70001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
387.60001 8.3000002 m
390.60001 0.30000001 l
384.60001 0.30000001 l
h
387.60001 8.3000002 m
S
CM
263.60001 299.5 m
260.60001 291.5 l
266.60001 291.5 l
h
263.60001 299.5 m
f
1 0 0 -1 -124 281 cm
387.60001 -18.5 m
384.60001 -10.5 l
390.60001 -10.5 l
h
387.60001 -18.5 m
S
1 J
1 j
0.60000002 i
520.20001 -10.5 m
520.20001 0.30000001 l
S
0 i
CM
396.20001 272.70001 m
399.20001 280.70001 l
393.20001 280.70001 l
h
396.20001 272.70001 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
520.20001 8.3000002 m
523.20001 0.30000001 l
517.20001 0.30000001 l
h
520.20001 8.3000002 m
S
CM
396.20001 299.5 m
393.20001 291.5 l
399.20001 291.5 l
h
396.20001 299.5 m
f
1 0 0 -1 -124 281 cm
520.20001 -18.5 m
517.20001 -10.5 l
523.20001 -10.5 l
h
520.20001 -18.5 m
S
1 J
1 j
0.60000002 i
387.60001 91.5 m
387.60001 102.3 l
S
0 i
CM
263.60001 170.7 m
266.60001 178.7 l
260.60001 178.7 l
h
263.60001 170.7 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
387.60001 110.3 m
390.60001 102.3 l
384.60001 102.3 l
h
387.60001 110.3 m
S
CM
263.60001 197.5 m
260.60001 189.5 l
266.60001 189.5 l
h
263.60001 197.5 m
f
1 0 0 -1 -124 281 cm
387.60001 83.5 m
384.60001 91.5 l
390.60001 91.5 l
h
387.60001 83.5 m
S
1 J
1 j
0.60000002 i
502.99963 47.800358 m
486.40036 64.399643 l
S
0 i
CM
356.7435 210.9435 m
364.52167 214.47903 l
360.27902 218.72168 l
h
356.7435 210.9435 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
480.7435 70.056496 m
488.52167 66.520966 l
484.27902 62.278324 l
h
480.7435 70.056496 m
S
CM
384.65649 238.85649 m
376.87833 235.32097 l
381.12097 231.07832 l
h
384.65649 238.85649 m
f
1 0 0 -1 -124 281 cm
508.65649 42.143501 m
500.87833 45.679035 l
505.12097 49.921677 l
h
508.65649 42.143501 m
S
1 J
1 j
0.60000002 i
714 163.5 m
714 152.7 l
S
0 i
CM
590 136.3 m
587 128.3 l
593 128.3 l
h
590 136.3 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
714 144.7 m
711 152.7 l
717 152.7 l
h
714 144.7 m
S
CM
590 109.5 m
593 117.5 l
587 117.5 l
h
590 109.5 m
f
1 0 0 -1 -124 281 cm
714 171.5 m
717 163.5 l
711 163.5 l
h
714 171.5 m
S
1 J
1 j
0.60000002 i
805.79999 163.5 m
805.79999 152.7 l
S
0 i
CM
681.79999 136.3 m
678.79999 128.3 l
684.79999 128.3 l
h
681.79999 136.3 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
805.79999 144.7 m
802.79999 152.7 l
808.79999 152.7 l
h
805.79999 144.7 m
S
CM
681.79999 109.5 m
684.79999 117.5 l
678.79999 117.5 l
h
681.79999 109.5 m
f
1 0 0 -1 -124 281 cm
805.79999 171.5 m
808.79999 163.5 l
802.79999 163.5 l
h
805.79999 171.5 m
S
1 J
1 j
0.60000002 i
714 213.89999 m
714 234.89999 l
S
0 i
CM
590 38.099998 m
593 46.099998 l
587 46.099998 l
h
590 38.099998 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
714 242.89999 m
717 234.89999 l
711 234.89999 l
h
714 242.89999 m
S
CM
590 75.099998 m
587 67.099998 l
593 67.099998 l
h
590 75.099998 m
f
1 0 0 -1 -124 281 cm
714 205.89999 m
711 213.89999 l
717 213.89999 l
h
714 205.89999 m
S
1 J
1 j
0.60000002 i
805.79999 213.89999 m
805.79999 234.89999 l
S
0 i
CM
681.79999 38.099998 m
684.79999 46.099998 l
678.79999 46.099998 l
h
681.79999 38.099998 m
f
0 J
0 j
1 0 0 -1 -124 281 cm
805.79999 242.89999 m
808.79999 234.89999 l
802.79999 234.89999 l
h
805.79999 242.89999 m
S
CM
681.79999 75.099998 m
678.79999 67.099998 l
684.79999 67.099998 l
h
681.79999 75.099998 m
f
1 0 0 -1 -124 281 cm
805.79999 205.89999 m
802.79999 213.89999 l
808.79999 213.89999 l
h
805.79999 205.89999 m
S
ep
end
%%Trailer
%%EOF
